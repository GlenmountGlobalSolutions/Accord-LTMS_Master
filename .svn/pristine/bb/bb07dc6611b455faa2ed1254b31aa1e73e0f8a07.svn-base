Imports System.Data.SqlClient

Public Class ShippingTemplateConfiguration
    Inherits System.Web.UI.Page

#Region "Event Handlers"
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            If Not Page.IsPostBack Then
                LoadTemplatesDDL()
                LoadTimesLB()
                LoadDriverDDL()
            End If
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Public Sub Page_PreRender(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.PreRender
        Try
            EnableControls()
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub ddlTemplates_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ddlTemplates.SelectedIndexChanged
        Try
            ClearTBs()
            LoadTimesLB()
            ddlTemplatesNew.SelectedIndex = ddlTemplates.SelectedIndex
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub lbTTimes_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lbTTimes.SelectedIndexChanged
        Try
            ClearTBs()
            LoadTemplateData()
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub cmdNew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdNew.Click
        Try

            Dim tID As String = ""
            Dim index As String = ""
            Dim status As String = ""
            Dim errorMsg As String = ""

            If (ValidateDialogInput()) Then
                'Save the data and return templateID, Shipping index, savestatus, and errormsg.
                Save(tID, index, status, errorMsg)

                If Not (Convert.ToBoolean(status)) Then
                    Master.Msg = "Error: unable to create new Delivery Time.<br>S.P. Status: " + status + ".<br>S.P. Message: " + errorMsg
                Else
                    LoadTemplatesDDL()
                    Me.ddlTemplates.SelectedIndex = Me.ddlTemplates.Items.IndexOf(Me.ddlTemplates.Items.FindByValue(tID))

                    LoadTimesLB()
                    Me.lbTTimes.SelectedIndex = Me.lbTTimes.Items.IndexOf(Me.lbTTimes.Items.FindByValue(index))

                    LoadTemplateData()
                End If
            Else
                Master.eMsg("Error: Unable to create new Delivery Time.")
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        Finally

        End Try
    End Sub

    Private Sub cmdSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSave.Click
        Try
            If (ValidateInput()) Then
                If (Me.ddlDriver.SelectedIndex < 0) Then
                    Me.ddlDriver.SelectedIndex = 0
                End If

                Dim sql As String = "UPDATE tblPSDeliveryTemplateTimes SET "
                sql += (" DeliveryTimeIndex = " + Me.tbIndex.Text)
                sql += (", ShipTime = '" + Me.tbShip.Text)
                sql += ("', ArrivalTime = '" + Me.tbArrival.Text)
                sql += ("', ApproximateSequenceTime = '" + Me.tbSeq.Text)
                sql += ("', Driver = '" + Me.ddlDriver.SelectedItem.Text)
                sql += ("' WHERE ")
                sql += (" (DeliveryTemplateID = " + Me.ddlTemplates.SelectedValue + ") AND ")
                sql += (" (DeliveryTimeIndex = " + Me.lbTTimes.SelectedValue + ")")

                DA.ExecSQL(sql)

                If Me.tbIndex.Text <> Me.tbIndex.OldText Then
                    Me.imgIndexCk.Visible = True
                End If
                If Me.tbShip.Text <> Me.tbShip.OldText Then
                    Me.imgShipCk.Visible = True
                End If
                If Me.tbArrival.Text <> Me.tbArrival.OldText Then
                    Me.imgArrivalCk.Visible = True
                End If
                If Me.tbSeq.Text <> Me.tbSeq.OldText Then
                    Me.imgSeqCk.Visible = True
                End If
                If Me.ddlDriver.SelectedItem.Text <> Me.ddlDriver.OldText Then
                    Me.imgDriverCk.Visible = True
                End If

                Master.tMsg("Save", "Information for Delivery Template: " + Me.lbTTimes.SelectedItem.Text + " has been updated.")

                'reload the data
                LoadTimesLB()
                'research for entry incase the index id was changed.
                Me.lbTTimes.SelectedIndex = Me.lbTTimes.Items.IndexOf(Me.lbTTimes.Items.FindByValue(Me.tbIndex.Text))
                LoadTemplateData()

            Else
                Master.eMsg("Error: Unable to save changes.")
            End If
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub cmdDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdDelete.Click
        Try
            If (Me.ddlTemplates.SelectedIndex >= 0) And (Me.lbTTimes.SelectedIndex >= 0) Then

                'DELETE FROM tblPSDeliveryTemplateTimes WHERE (DeliveryTemplateID = 1) AND (DeliveryTimeIndex = 99.9)
                Dim sql As String = "DELETE FROM tblPSDeliveryTemplateTimes WHERE "
                sql += "(DeliveryTemplateID = " + Me.ddlTemplates.SelectedValue + ") "
                sql += "AND (DeliveryTimeIndex = " + Me.lbTTimes.SelectedValue + ")"

                DA.ExecSQL(sql)

                Master.tMsg("Delete", "Template: " + Me.lbTTimes.SelectedItem.Text + " was deleted.")

                'delete template if it contains only 1 item
                If (Me.lbTTimes.Items.Count <= 1) Then
                    sql = "DELETE FROM tblPSDeliveryTemplates WHERE "
                    sql += "(DeliveryTemplateID = " + Me.ddlTemplates.SelectedValue + ") "
                    DA.ExecSQL(sql)
                    LoadTemplatesDDL()
                End If

                LoadTimesLB()
                ClearTBs()
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub rblTemplateNew_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rblTemplateNew.SelectedIndexChanged
        Try
            If (Me.rblTemplateNew.SelectedValue = "0") Then
                Me.tbTemplateNew.Visible = False
                Me.ddlTemplatesNew.Visible = True
            Else
                Me.tbTemplateNew.Visible = True
                Me.ddlTemplatesNew.Visible = False
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub ddlTemplatesNew_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles ddlTemplatesNew.SelectedIndexChanged
        'synchronize text box
        tbTemplateNew.Text = ddlTemplatesNew.SelectedItem.Text
    End Sub
#End Region

#Region "Methods"

    Private Function ValidateInput() As Boolean
        Try
            Dim status As Boolean = True

            'check for changes
            If Me.tbIndex.Text <> Me.tbIndex.OldText Or Me.tbShip.Text <> Me.tbShip.OldText Or Me.tbArrival.Text <> Me.tbArrival.OldText Or Me.tbSeq.Text <> Me.tbSeq.OldText Or Me.ddlDriver.SelectedItem.Text <> Me.ddlDriver.OldText Then
                status = True And status
            Else
                Master.Msg = "Save canceled.  Nothing was changed."
                status = False And status
            End If


            If (Not ValidateTime(Me.tbSeq.Text)) Then
                Master.Msg = "Error: Invalid Sequence Time. Valid format is - HH:MM xM"
                status = False And status
                Me.imgSeq.Visible = True
            Else : Me.imgSeq.Visible = False
            End If
            If (Not ValidateTime(Me.tbArrival.Text)) Then
                Master.Msg = "Error: Invalid Arrival Time. Valid format is - HH:MM xM"
                status = False And status
                Me.imgArrival.Visible = True
            Else : Me.imgArrival.Visible = False
            End If
            If (Not ValidateTime(Me.tbShip.Text)) Then
                Master.Msg = "Error: Invalid Ship Time. Valid format is - HH:MM xM"
                status = False And status
                Me.imgShip.Visible = True
            Else : Me.imgShip.Visible = False
            End If

            If (IsNumeric(Me.tbIndex.Text)) Then
                Dim s As Single = Convert.ToSingle(Me.tbIndex.Text)
                If (s < 0) Or (s >= 100) Then
                    Master.Msg = "Error: Invalid Index. Index must be a number > 0 and < 100"
                    status = False And status
                    Me.imgIndex.Visible = True
                Else : Me.imgIndex.Visible = False
                End If
            Else
                Master.Msg = "Error: Invalid Index. Index must be a number > 0 and < 100"
                status = False And status
                Me.imgIndex.Visible = True
            End If


            Return status
        Catch ex As Exception
            Master.Msg = "Please fix the listed errors."
            Me.imgIndex.Visible = True
            Return False
        End Try
    End Function

    Public Shared Function ValidateTime(ByVal time As String) As Boolean
        Try
            Dim status As Boolean = True

            '/*
            '*   Regex:              ^((([0]?[1-9]|1[0-2])(:)[0-5][0-9])?( )?(AM|am|aM|Am|PM|pm|pM|Pm))$
            '*   Description:        Enforces HH:MM ?M format
            '*   Derived from:       http://regexlib.com/REDetails.aspx?regexp_id=144
            '*
            '*   HH validation:      ([0]?[1-9]|1[0-2]) = allows 1-9 or 10, 11, 12.
            '*   : validation:       (:)
            '*   MM validation:      [0-5][0-9] = allows 00-59.
            '*   " ?M" validation:   ( )?(AM|am|aM|Am|PM|pm|pM|Pm) = enforces one space and any possible way to write AM/PM.
            '*
            '*  NOTE:  This save regex is used in JAVASCRIPT to validate the NEW SHIPPING ENTRY dialog.
            '*/
            Dim pattern As String = "^((([0]?[1-9]|1[0-2])(:)[0-5][0-9])?( )?(AM|am|aM|Am|PM|pm|pM|Pm))$"

            If Not Regex.IsMatch(time, pattern) Then
                status = False
            End If

            Return status
        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Function ValidateDialogInput() As Boolean
        Try
            Dim status As Boolean = True

            If (Not ValidateTime(Me.tbSeqNew.Text)) Then
                status = False And status
            End If
            If (Not ValidateTime(Me.tbArrivalNew.Text)) Then
                status = False And status
            End If
            If (Not ValidateTime(Me.tbShipNew.Text)) Then
                status = False And status
            End If

            If (IsNumeric(Me.tbIndexNew.Text)) Then
                Dim s As Single = Convert.ToSingle(Me.tbIndexNew.Text)
                If (s < 0) Or (s >= 100) Then
                    status = False And status
                End If
            Else
                status = False And status
            End If

            Return status
        Catch ex As Exception
            Master.eMsg(ex.ToString())
            Return False
        End Try
    End Function

    Private Sub LoadDriverDDL()
        Try

            Dim sql As String = "SELECT ParameterListValue AS [TEXT], ParameterListValue AS [VALUE] FROM tblParameterListValues WHERE (ParameterListID = '51') ORDER BY DISPLAYID"
            Dim ds As DataSet

            ds = DA.GetDataSet(sql)

            Me.ddlDriver.Items.Clear()
            If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then
                Me.ddlDriver.DataSource = ds
                Me.ddlDriver.DataTextField = "TEXT"
                Me.ddlDriver.DataValueField = "VALUE"
                Me.ddlDriver.DataBind()
                Me.ddlDriver.Items.Insert(0, "")
            End If

            'handle the driver dropdown in the new dialog
            Me.ddlDriverNew.Items.Clear()
            If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then
                Me.ddlDriverNew.DataSource = ds.Copy
                Me.ddlDriverNew.DataTextField = "TEXT"
                Me.ddlDriverNew.DataValueField = "VALUE"
                Me.ddlDriverNew.DataBind()
                Me.ddlDriverNew.Items.Insert(0, "")
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())

        End Try
    End Sub

    Private Sub LoadTimesLB()
        Try
            If (Me.ddlTemplates.SelectedIndex >= 0) Then

                Dim ds As DataSet
                Dim sql As String = ""

                sql = "SELECT DeliveryTimeIndex AS VALUE, " & _
                             "CONVERT(VARCHAR, DeliveryTimeIndex) + ' - ' + " & _
                                     "right(('0' + ShipTime), 8) + ' , ' + " & _
                                     "right(('0' + ArrivalTime), 8) + ' , ' + " & _
                                     "right(('0' + ApproximateSequenceTime), 8) AS TEXT " & _
                      "FROM tblPSDeliveryTemplateTimes " & _
                      "WHERE DeliveryTemplateID = " + Me.ddlTemplates.SelectedValue

                ds = DA.GetDataSet(sql)

                Me.lbTTimes.Items.Clear()
                If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then
                    Me.lbTTimes.DataSource = ds
                    Me.lbTTimes.DataTextField = "TEXT"
                    Me.lbTTimes.DataValueField = "VALUE"
                    Me.lbTTimes.DataBind()
                End If
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())

        End Try
    End Sub

    Private Sub LoadTemplatesDDL()
        Try

            Dim ds As DataSet
            Dim sql As String = "SELECT DeliveryTemplateID AS VALUE, Description AS TEXT FROM tblPSDeliveryTemplates ORDER BY Description"

            Me.ddlTemplates.Items.Clear()

            ds = DA.GetDataSet(sql)

            Me.ddlTemplates.Items.Clear()
            If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then

                Me.ddlTemplates.DataSource = ds
                Me.ddlTemplates.DataTextField = "TEXT"
                Me.ddlTemplates.DataValueField = "VALUE"
                Me.ddlTemplates.DataBind()
            End If

            'handle new dialog
            Me.ddlTemplatesNew.Items.Clear()
            If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then
                Me.ddlTemplatesNew.DataSource = ds.Copy
                Me.ddlTemplatesNew.DataTextField = "TEXT"
                Me.ddlTemplatesNew.DataValueField = "VALUE"
                Me.ddlTemplatesNew.DataBind()

                'synchronize textbox
                Me.tbTemplateNew.Text = ddlTemplatesNew.SelectedItem.Text
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try

    End Sub

    Private Sub LoadTemplateData()
        Try
            Dim ds As DataSet
            Dim sql As String = ""
            Dim tID, ttID, strDriver As String

            If (Me.ddlTemplates.SelectedIndex >= 0) And (Me.lbTTimes.SelectedIndex >= 0) Then

                tID = Me.ddlTemplates.SelectedValue
                ttID = Me.lbTTimes.SelectedValue

                sql = "SELECT DeliveryTimeIndex, ShipTime, ArrivalTime, ApproximateSequenceTime, Driver "
                sql += "FROM tblPSDeliveryTemplateTimes "
                sql += "WHERE (DeliveryTemplateID = " + tID + ") AND (DeliveryTimeIndex = " + ttID + ")"

                ds = DA.GetDataSet(sql)

                If ((ds IsNot Nothing) AndAlso (ds.Tables(0).Rows.Count > 0)) Then
                    With ds.Tables(0).Rows(0)
                        Me.tbIndex.Text = .Item("DeliveryTimeIndex").ToString()
                        Me.tbArrival.Text = .Item("ArrivalTime").ToString()
                        Me.tbSeq.Text = .Item("ApproximateSequenceTime").ToString()
                        Me.tbShip.Text = .Item("ShipTime").ToString()

                        strDriver = .Item("Driver").ToString()

                        'select driver
                        Dim i As Integer = -1
                        i = Me.ddlDriver.Items.IndexOf(Me.ddlDriver.Items.FindByText(strDriver))
                        If (i < 0) Then
                            Me.ddlDriver.Items.Insert(1, strDriver)
                            Me.ddlDriver.Items(1).Value = strDriver
                            i = 1
                        End If
                        Me.ddlDriver.SelectedIndex = i


                        Me.tbIndex.OldText = .Item("DeliveryTimeIndex").ToString()
                        Me.tbArrival.OldText = .Item("ArrivalTime").ToString()
                        Me.tbSeq.OldText = .Item("ApproximateSequenceTime").ToString()
                        Me.tbShip.OldText = .Item("ShipTime").ToString()
                        Me.ddlDriver.OldText = .Item("Driver").ToString()

                        'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                        'XXXX   Dialog New
                        'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                        Me.tbIndexNew.Text = .Item("DeliveryTimeIndex").ToString()
                        Me.tbArrivalNew.Text = .Item("ArrivalTime").ToString()
                        Me.tbSeqNew.Text = .Item("ApproximateSequenceTime").ToString()
                        Me.tbShipNew.Text = .Item("ShipTime").ToString()

                        strDriver = .Item("Driver").ToString()

                        'select driver
                        i = -1
                        i = Me.ddlDriverNew.Items.IndexOf(Me.ddlDriverNew.Items.FindByText(strDriver))
                        If (i < 0) Then
                            Me.ddlDriverNew.Items.Insert(1, strDriver)
                            Me.ddlDriverNew.Items(1).Value = strDriver
                            i = 1
                        End If
                        Me.ddlDriverNew.SelectedIndex = i


                        Me.tbIndexNew.OldText = .Item("DeliveryTimeIndex").ToString()
                        Me.tbArrivalNew.OldText = .Item("ArrivalTime").ToString()
                        Me.tbSeqNew.OldText = .Item("ApproximateSequenceTime").ToString()
                        Me.tbShipNew.OldText = .Item("ShipTime").ToString()
                        Me.ddlDriverNew.OldText = .Item("Driver").ToString()

                        'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                        'XXXX   END of Dialog New
                        'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                    End With
                End If
            End If
        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub ClearTBs()
        Me.tbArrival.Text = ""
        Me.tbIndex.Text = ""
        Me.tbSeq.Text = ""
        Me.tbShip.Text = ""
        If (Me.ddlDriver.Items.Count > 0) Then
            Me.ddlDriver.SelectedIndex = 0
        Else
            Me.ddlDriver.SelectedIndex = -1
        End If


        Me.tbArrivalNew.Text = ""
        Me.tbIndexNew.Text = ""
        Me.tbSeqNew.Text = ""
        Me.tbShipNew.Text = ""
        If (Me.ddlDriverNew.Items.Count > 0) Then
            Me.ddlDriverNew.SelectedIndex = 0
        Else
            Me.ddlDriverNew.SelectedIndex = -1
        End If
    End Sub

    Private Sub EnableControls()
        Try
            Master.Secure(Me.cmdDelete)
            Master.Secure(Me.cmdNew)
            Master.Secure(Me.cmdSave)

            If lbTTimes.SelectedItem Is Nothing Then
                cmdSave.Enabled = False
                cmdDelete.Enabled = False
            End If

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub

    Private Sub Save(ByRef templateId As String, ByRef indexId As String, ByRef spStatus As String, ByRef spErrorMsg As String)
        Try

            'CREATE PROCEDURE procPSInsertDeliveryTemplateTime  @TemplateDesc varchar(80), 
            '				@Index varchar(80), 
            '				@ShipTime varchar(50),
            '				@ArrivalTime varchar(50), 
            '				@ApproximateSequenceTime varchar(50),
            '				@Driver varchar(50),
            '				@TemplateID int OUT, 
            '				@Status varchar(80) OUT, @ErrorMsg varchar(80) OUT  AS

            Dim oSqlParameter As SqlParameter
            Dim colParameters As New Collections.Generic.List(Of System.Data.SqlClient.SqlParameter)
            Dim colOutput As Collections.Generic.List(Of System.Data.SqlClient.SqlParameter)

            oSqlParameter = New SqlParameter("@TemplateDesc", SqlDbType.VarChar, 80)
            If (Me.rblTemplateNew.SelectedValue = "0") Then
                oSqlParameter.Value = Me.ddlTemplatesNew.SelectedItem.Text
            Else
                oSqlParameter.Value = Me.tbTemplateNew.Text
            End If
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@Index", SqlDbType.VarChar, 80)
            oSqlParameter.Value = Me.tbIndexNew.Text
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@ShipTime", SqlDbType.VarChar, 50)
            oSqlParameter.Value = Me.tbShipNew.Text
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@ArrivalTime", SqlDbType.VarChar, 50)
            oSqlParameter.Value = Me.tbArrivalNew.Text
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@ApproximateSequenceTime", SqlDbType.VarChar, 50)
            oSqlParameter.Value = Me.tbSeqNew.Text
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@Driver", SqlDbType.VarChar, 50)
            oSqlParameter.Value = Me.ddlDriverNew.SelectedItem.Text
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@TemplateID", SqlDbType.Int)
            oSqlParameter.Direction = ParameterDirection.Output
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@Status", SqlDbType.VarChar, 80)
            oSqlParameter.Direction = ParameterDirection.Output
            colParameters.Add(oSqlParameter)

            oSqlParameter = New SqlParameter("@ErrorMsg", SqlDbType.VarChar, 80)
            oSqlParameter.Direction = ParameterDirection.Output
            colParameters.Add(oSqlParameter)

            colOutput = DA.ExecSP("procPSInsertDeliveryTemplateTime", colParameters)

            indexId = Me.tbIndexNew.Text
            templateId = ""
            spErrorMsg = ""
            spStatus = ""
            For Each par As SqlParameter In colOutput
                If par.ParameterName = "@TemplateID" Then
                    templateId = par.Value.ToString()
                End If
                If par.ParameterName = "@Status" Then
                    spStatus = par.Value.ToString()
                End If
                If par.ParameterName = "@ErrorMsg" Then
                    spErrorMsg = par.Value.ToString()
                End If
            Next

        Catch ex As Exception
            Master.eMsg(ex.ToString())
        End Try
    End Sub
#End Region
End Class